.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "FRDCSA::BehaviorTree::Behavior 3"
.TH FRDCSA::BehaviorTree::Behavior 3 "2020-05-31" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
FRDCSA::BehaviorTree::Behavior \- Base class of all behaviors in tree.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Part of a pure-Perl behavior tree implementation.  Implemention based
on 'The Behavior Tree Starter Kit' (Chapter 6) by Alex J. Champandard
and Philip Dunstan, and the \s-1BTSK\s0 GitHub code.  Documentation
paraphrased.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
An abstract interface that is started, ran and stopped.  Leaf nodes,
such as actions (i.e. \*(L"move to door\*(R", \*(L"open door\*(R", \*(L"close door\*(R"),
conditions (i.e. \*(L"is the temperature too high?\*(R", \*(L"has too much time
passed?\*(R") inherit from this base class.  Tree branches are
higher-order behaviors, adding together tinier beahviors to give more
complex behavior.
.PP
All behaviors must return a status.  Status have two functions:
completion status \- indicates success or failure of completed
behaviors, and execution status \- on every update while the behavior
is running.  Usually set to '\s-1RUNNING\s0', but 2nd gen BTs can improve
performance by making better use of execution statuses.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrew John Dougherty
.SH "LICENSE"
.IX Header "LICENSE"
GPLv3
.IP "init" 4
.IX Item "init"
.PD 0
.IP "\fBonInitialize()\fR" 4
.IX Item "onInitialize()"
.PD
Called once, right before the first call to update the method of the
behavior.
.IP "\fBupdate()\fR" 4
.IX Item "update()"
Called just once every time the \s-1BT\s0 is updated, until it returns a
status of terminated.
.ie n .IP "onTerminate(Status => $status)" 4
.el .IP "onTerminate(Status => \f(CW$status\fR)" 4
.IX Item "onTerminate(Status => $status)"
Called just once, right after the earlier update signals it's stopped.
.IP "\fBtick()\fR" 4
.IX Item "tick()"
\&\s-1BT\s0 tick method.
.IP "\fBreset()\fR" 4
.IX Item "reset()"
.PD 0
.IP "\fBabort()\fR" 4
.IX Item "abort()"
.IP "\fBisTerminated()\fR" 4
.IX Item "isTerminated()"
.IP "\fBisRunning()\fR" 4
.IX Item "isRunning()"
.PD
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 50:" 4
.IX Item "Around line 50:"
\&'=item' outside of any '=over'
.Sp
=over without closing =back
